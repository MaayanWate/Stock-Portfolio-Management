worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Load balancing for stocks1 service
    upstream stocks1_backend {
        server stocks1:5001 weight=3;  # 3 times more requests
        server stocks1_2:5001 weight=1;  # fewer requests
    }

    # Defining stocks2 service
    upstream stocks2_backend {
        server stocks2:5001;
    }

    server {
        listen 80;

        # Route for stocks1 (GET only)
        location /stocks1 {
            proxy_pass http://stocks1_backend/stocks;
            limit_except GET {
                deny all;
            }
            error_log /var/log/nginx/stocks1_error.log debug;
            access_log /var/log/nginx/stocks1_access.log;
        }

        # Support for stocks1 with ID (GET only)
        location ~ ^/stocks1/([a-zA-Z0-9\-]+)$ {
            proxy_pass http://stocks1_backend/stocks/$1;
            limit_except GET {
                deny all;
            }
            error_log /var/log/nginx/stocks1_id_error.log debug;
            access_log /var/log/nginx/stocks1_id_access.log;
        }

        # Route for stocks2 (GET only)
        location /stocks2 {
            proxy_pass http://stocks2_backend/stocks;
            limit_except GET {
                deny all;
            }
            error_log /var/log/nginx/stocks2_error.log debug;
            access_log /var/log/nginx/stocks2_access.log;
        }

        # Support for stocks2 with ID (GET only)
        location ~ ^/stocks2/([a-zA-Z0-9\-]+)$ {
            proxy_pass http://stocks2_backend/stocks/$1;
            limit_except GET {
                deny all;
            }
            error_log /var/log/nginx/stocks2_id_error.log debug;
            access_log /var/log/nginx/stocks2_id_access.log;
        }

        # Deny GET access to /portfolio-value
        location /portfolio-value {
            deny all;
            error_page 403 = /403.html;
        }

        # Deny GET access to /stock-value/{id}
        location ~ ^/stock-value/([a-zA-Z0-9\-]+)$ {
            deny all;
            error_page 403 = /403.html;
        }

        # Block all other routes
        location / {
            deny all;
            error_page 403 = /403.html;
        }

        # Custom 403 error page
        error_page 403 /403.html;
        location = /403.html {
            internal;
            default_type text/plain;
            return 403 "Access Denied: You do not have permission to access this resource.";
        }

        # Custom 404 error page
        error_page 404 /404.html;
        location = /404.html {
            internal;
            default_type text/plain;
            return 404 "Not Found: The resource you are looking for does not exist.";
        }
    }
}
